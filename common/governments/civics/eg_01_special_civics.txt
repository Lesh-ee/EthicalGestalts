#civic_example = {
#	playable = {}								# AND trigger, no scope; use this to prevent the civic from being selectable by the player (UI)
#	potential = {}								# requirements list, see ../readme_requirements.txt
#	possible = {}								# requirements list, see ../readme_requirements.txt
#	pickable_at_start = yes / no				# default: yes
#	modification = yes / no						# default: yes, set to no to prevent adding or removing this after creation of the empire
#
#	random_weight = { base = 5 }				# scriptable weight for randomizing a civic; required, else the civic will not get assigned randomly
#
#	modifier = {}								# modifier added to the country if the civic is selected and valid
#	can_build_ruler_ship = yes / no				# default: no
#	traits = { trait = ... }					# default: empty; trait set to enforce on the primary species. They cannot be removed, but more can be added if points/picks permit
#	has_secondary_species = {					# default: none; if present, will enable secondary species customization in empire designer and will create secondary species & pops at galaxy generation time (see empire_init_create_capital_secondary_pops)
#		traits = { trait = ... }					# default: empty; trait set to enforce on the secondary species. They cannot be removed, but more can be added if points/picks permit
#	}
#}

### Non-Player Civics

# Fallen Empires
civic_machine_remnants = {
	modification = no
	icon = "gfx/interface/icons/governments/civics/civic_machine_remnants.dds"
	potential = {
		country_type = { value = fallen_empire }
		inline_script = "governments/conditions/is_machine"
	}
	random_weight = { base = @civic_default_random_weight }
	description = FALLEN_EMPIRE_LETHARGY_1
	modifier = {}
}

civic_custodian_directives = {
	modification = no
	icon = "gfx/interface/icons/governments/civics/civic_custodian_directives.dds"
	potential = {
		country_type = { value = fallen_empire }
		inline_script = "governments/conditions/is_machine"
	}
	random_weight = { base = @civic_default_random_weight }
	description = FALLEN_EMPIRE_LETHARGY_2
	modifier = {}
}

civic_awakened_machine = {
	modification = no
	icon = "gfx/interface/icons/governments/civics/civic_awakened_machine.dds"
	potential = {
		country_type = { value = awakened_fallen_empire }
		inline_script = "governments/conditions/is_machine"
	}
	random_weight = { base = @civic_default_random_weight }
	description = FALLEN_EMPIRE_LETHARGY_2
	modifier = {}
}

civic_malfunctioning_custodian = {
	modification = no
	icon = "gfx/interface/icons/governments/civics/civic_malfunctioning_custodian.dds"
	potential = {
		country_type = { value = awakened_fallen_empire }
		inline_script = "governments/conditions/is_machine"
	}
	random_weight = { base = @civic_default_random_weight }
	modifier = {
		ship_fire_rate_mult = 0.1
		planet_jobs_energy_produces_mult = 0.5
	}
}

civic_final_defense_protocols = {
	modification = no
	icon = "gfx/interface/icons/governments/civics/civic_final_defense_protocols.dds"
	potential = {
		country_type = { value = awakened_fallen_empire }
		inline_script = "governments/conditions/is_machine"
	}
	random_weight = { base = @civic_default_random_weight }
	modifier = {
		ship_fire_rate_mult = 0.1
		planet_jobs_energy_produces_mult = 0.5
	}
}
